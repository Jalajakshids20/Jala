import React, { useState, useEffect } from 'react';

function MyForm() {
  const [formData, setFormData] = useState({
    username: '',
    email: '',
    password: '',
    collegeName: '', // Added College Name field
  });

  const [errors, setErrors] = useState({});
  const [isFormValid, setIsFormValid] = useState(false);

  useEffect(() => {
    // Function to validate the form data
    const validateForm = () => {
      const newErrors = {};

      // Validate the username
      if (formData.username.trim() === '') {
        newErrors.username = 'Username is required';
      }

      // Validate the email
      if (!/^\S+@\S+\.\S+$/.test(formData.email)) {
        newErrors.email = 'Invalid email format';
      }

      // Validate the password
      if (formData.password.length < 6) {
        newErrors.password = 'Password must be at least 6 characters';
      }

      // Validate the College Name
      if (formData.collegeName.trim() === '') {
        newErrors.collegeName = 'College Name is required';
      }

      // Check if there are any errors
      const isValid = Object.keys(newErrors).length === 0;
      setIsFormValid(isValid);

      // Update the errors state
      setErrors(newErrors);
    };

    validateForm(); // Call the validation function whenever formData changes
  }, [formData]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Perform form submission if the form is valid
    if (isFormValid) {
      console.log('Form submitted:', formData);
    } else {
      console.log('Form has errors. Please correct them.');
    }
  };

  return (
    <div>
      <h1>Form Validation Example</h1>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Username:</label>
          <input
            type="text"
            name="username"
            value={formData.username}
            onChange={handleChange}
          />
          {errors.username && <p>{errors.username}</p>}
        </div>
        <div>
          <label>Email:</label>
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleChange}
          />
          {errors.email && <p>{errors.email}</p>}
        </div>
        <div>
          <label>Password:</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleChange}
          />
          {errors.password && <p>{errors.password}</p>}
        </div>
        <div>
          <label>College Name:</label>
          <input
            type="text"
            name="collegeName"
            value={formData.collegeName}
            onChange={handleChange}
          />
          {errors.collegeName && <p>{errors.collegeName}</p>}
        </div>
        <button type="submit">Submit</button>
      </form>
    </div>
  );
}

export default MyForm;
