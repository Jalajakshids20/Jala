import React, { Component } from 'react';

class UserForm extends Component {
  constructor(props) {
    super(props);
    this.state = {
      username: '',
      age: '',
      errors: {
        username: '',
        age: '',
      },
    };
  }

  handleUsernameChange = (event) => {
    const value = event.target.value;
    this.setState({
      username: value,
      errors: {
        ...this.state.errors,
        username: value.length < 3 ? 'Username must be at least 3 characters' : '',
      },
    });
  };

  handleAgeChange = (event) => {
    const value = event.target.value;
    this.setState({
      age: value,
      errors: {
        ...this.state.errors,
        age: isNaN(value) || parseInt(value) < 0 ? 'Age must be a valid positive number' : '',
      },
    });
  };

  handleSubmit = (event) => {
    event.preventDefault();

    // Check for validation errors before submitting
    if (this.state.errors.username || this.state.errors.age) {
      console.log('Form has validation errors. Please correct them.');
      return;
    }

    // Proceed with form submission
    console.log('Username:', this.state.username);
    console.log('Age:', this.state.age);
  };

  render() {
    return (
      <div>
        <h1>User Information</h1>
        <form onSubmit={this.handleSubmit}>
          <div>
            <label htmlFor="username">Username:</label>
            <input
              type="text"
              id="username"
              value={this.state.username}
              onChange={this.handleUsernameChange}
              required
            />
            {this.state.errors.username && (
              <p className="error">{this.state.errors.username}</p>
            )}
          </div>
          <div>
            <label htmlFor="age">Age:</label>
            <input
              type="number"
              id="age"
              value={this.state.age}
              onChange={this.handleAgeChange}
              required
            />
            {this.state.errors.age && (
              <p className="error">{this.state.errors.age}</p>
            )}
          </div>
          <div>
            <button type="submit">Submit</button>
          </div>
        </form>
      </div>
    );
  }
}

export default UserForm;
